pipeline {
    agent any
    
    environment {
            
        AWS_ACCESS_KEY_ID = credentials('AWS Credentials')
        AWS_SECRET_ACCESS_KEY = credentials('AWS Credentials')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ChristianAdan/abb-test.git'
            }
        }
        
        stage('Terraform Init') {
            steps {
                dir('abb-test/terraform') {
                    bat 'terraform init -backend=false'
                }
            }
        }
        
        stage('Terraform Plan') {
            steps {
                dir('abb-test/terraform') {
                    bat 'terraform plan -out tfplan'
                    bat 'terraform show -no-color tfplan > tfplan.txt'
                }
            }
        }
        
        stage('Terraform Apply / Destroy') {
            steps {
                script {
                    if (params.action == 'apply') {
                        if (!params.autoApprove) {
                            def plan = readFile 'abb-test/terraform/tfplan.txt'
                            input message: "Do you want to apply the plan?",
                                  parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                        }

                        bat "terraform apply -input=false abb-test/terraform/tfplan"
                    } else if (params.action == 'destroy') {
                        bat "terraform destroy --auto-approve"
                    } else {
                        error "Invalid action selected. Please choose either 'apply' or 'destroy'."
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up the workspace
            cleanWs()
        }
    }
}
